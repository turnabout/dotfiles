# 
#   █                    █                      ▀      ▄   
#   █▄▄▄    ▄▄▄    ▄▄▄   █ ▄▄           ▄▄▄▄  ▄▄▄    ▄▄█▄▄ 
#   █▀ ▀█  ▀   █  █   ▀  █▀  █         █▀ ▀█    █      █   
#   █   █  ▄▀▀▀█   ▀▀▀▄  █   █         █   █    █      █   
#   ██▄█▀  ▀▄▄▀█  ▀▄▄▄▀  █   █         ▀█▄▀█  ▄▄█▄▄    ▀▄▄ 
#                                       ▄  █               
#                                        ▀▀                


# +----------------------------------------------------------------------------+
# + Aliases                                                                    |
# +----------------------------------------------------------------------------+
alias gs="git status"
alias gc="git checkout"
alias gcn="git checkout -b "
alias ga="git add -A && git commit"
alias gd="git diff"
alias gpr="git pull --rebase"
alias fuckshitup="git branch --merged develop | grep -v master | grep -v develop | xargs --no-run-if-empty git branch -d"
alias grh="git reset --hard"


# +----------------------------------------------------------------------------+
# + Functions                                                                  |
# +----------------------------------------------------------------------------+

# Git push current branch
function gp() {
    branch_name="$(git symbolic-ref HEAD 2>/dev/null --short)"
    git push origin "${branch_name}"
}

# Add all & push
function gap() {
    ga
    gp
}

# Remote update
function gru() {
    git remote update
}

# git log shortcut
function gl() {
    if [ ${1} ]; then 
        git log -${1}
    else
        git log
    fi
}


# +----------------------------------------------------------------------------+
# + Git branch in prompt                                                       |
# +----------------------------------------------------------------------------+

# Colors
red="\033[0;31m"
white="\033[0;37m"
green="\033[0;32m"

# Brackets needed around non-printable characters in PS1
ps1_red='\['"$red"'\]'
ps1_green='\['"$green"'\]'
ps1_white='\['"$white"'\]'

function parse_git_branch() {
    gitstatus=`git status 2> /dev/null`
    if [[ `echo $gitstatus | grep "Changes to be committed"` != "" ]]
    then
        git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1***)/'
    elif [[ `echo $gitstatus | grep "Changes not staged for commit"` != "" ]]
    then
        git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1**)/'
    elif [[ `echo $gitstatus | grep "Untracked"` != "" ]]
    then
        git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1*)/'
    elif [[ `echo $gitstatus | grep "nothing to commit"` != "" ]]
    then
        git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
    else
        git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1?)/'
    fi
}

# Echo a non-printing color character depending on whether or not the current git branch is the master    
# Does NOT print the branch name                                                                          
# Use the parse_git_branch() function for that.                                                           
function parse_git_branch_color() {
    br=$(parse_git_branch)
    if [[ $br == "(master)" || $br == "(master*)" || $br == "(master**)" || $br == "(master***)" ]]; then
        echo -e "${red}"
    else
        echo -e "${green}"
    fi
}

# No color:
#export PS1="@\h:\W\$(parse_git_branch) \$ "

# With color:
# export PS1="$ps1_red\u:$ps1_white\W\[\$(parse_git_branch_color)\]\$(parse_git_branch) $ps1_red\$$ps1_white "
export PS1="$ps1_red\u:$ps1_white\W\[\$(parse_git_branch_color)\]\$(parse_git_branch) $ps1_red\$$ps1_white "
